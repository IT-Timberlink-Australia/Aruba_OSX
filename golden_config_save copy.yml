---
# First play just captures FW version & hostname of the switch.
- name: Get the switch version and hostname.
  hosts: all
  collections:
    - arubanetworks.aoscx
  gather_facts: False
  vars:
    ansible_connection: network_cli
  tasks:
    - name: Run the command to get output with the current Firmware version on the switch.
      aoscx_command:
        commands: ['show version']
      register: vers
    - name: Parse the output from the switch and save the exact FW version to the variable.
      set_fact:
        vers: "{{ vers.stdout | join('') | regex_search('Version.*:.*GL.([0-9]{2}.){2}.[0-9]+') | replace('Version      : ','') }}"
    - debug:
        msg: "{{ vers }}"
    - name: Run the command to get output with the Switch Hostname.
      aoscx_command:
        commands: ['show hostname']
      register: hostname
    - name: Parse the output from the switch and save the exact Switch Hostname.
      set_fact:
        hostname: "{{ hostname.stdout | join('') }}"
    - debug:
            msg: "{{ hostname }}"
    - name: Take a backup of running-config, upload FW to primary partition, then boot from new FW on primary partition, if an upgrade is required
      block:
        - name: Copy Running Config to local (Ansible control node) as JSON file.
          aoscx_backup_config:
            config_name: 'running-config'
            remote_output_file_tftp_path: 'tftp://10.70.128.32/running-config_{{ hostname }}.json'
